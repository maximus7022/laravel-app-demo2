pipeline{
    environment{
        STOP = "docker stop \$(docker ps -a -q)"
        PRUNE = "docker system prune -a --volumes -f"
        PULL = "docker pull maximus7022/laravel-app:1.${BUILD_NUMBER}"
        RUN = "docker run -d -p 80:5000 --name laravel_app maximus7022/laravel-app:v.${BUILD_NUMBER}"
    }
    agent any
    stages{
        stage("Building image"){
            steps{
                echo "Building app image..."
                sh "docker build -t 798653922524.dkr.ecr.eu-north-1.amazonaws.com/laravel-app:v.${BUILD_NUMBER} ."
                echo "--------------------------OK--------------------------"
            }
        }
        stage("ECR Authentication"){
            steps{
                echo "Logging to ECR..."
                sh "aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 798653922524.dkr.ecr.eu-north-1.amazonaws.com"
                echo "--------------------------OK--------------------------"
            }
        }
        stage("Pushing to ECR"){
            steps{
                echo "Pushing to ECR..."
                sh "docker push 798653922524.dkr.ecr.eu-north-1.amazonaws.com/laravel-app:v.${BUILD_NUMBER}"
                echo "--------------------------OK--------------------------"
            }
        }
        stage("Cleaning build environment"){
            steps{
                echo "Removing unused images..."
                sh "docker system prune -a --volumes -f"
                echo "--------------------------OK--------------------------"
            }
        }
        // stage("Cleaning production environment"){
        //     steps{
        //         echo "Removing old containers and images..."
        //         withCredentials([
        //             string(credentialsId: 'laravel_production_user', variable: 'PROD_USER'),
        //             string(credentialsId: 'laravel_production_ip', variable: 'PROD_IP')
        //         ]){
        //             sshagent(['production_key']) {
        //                 sh "ssh -o StrictHostKeyChecking=no ${PROD_USER}@${PROD_IP} '${STOP}'"
        //                 sh "ssh -o StrictHostKeyChecking=no ${PROD_USER}@${PROD_IP} '${PRUNE}'"
        //             }
        //         }
        //     }
        // }
        // stage("Remote project deployment"){
        //     steps{
        //         echo "Pulling image and running container..."
        //         withCredentials([
        //             string(credentialsId: 'laravel_production_user', variable: 'PROD_USER'),
        //             string(credentialsId: 'laravel_production_ip', variable: 'PROD_IP')
        //         ]){
        //             sshagent(['production_key']) {
        //                 sh "ssh -o StrictHostKeyChecking=no ${PROD_USER}@${PROD_IP} '${PULL}'"
        //                 sh "ssh -o StrictHostKeyChecking=no ${PROD_USER}@${PROD_IP} '${RUN}'"
        //             }
        //         }
        //     }
        // }
    }
}